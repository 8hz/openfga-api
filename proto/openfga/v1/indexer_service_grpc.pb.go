// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: openfga/v1/indexer_service.proto

package openfgav1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	IndexerService_ExpandedReadChanges_FullMethodName = "/openfga.v1.IndexerService/ExpandedReadChanges"
)

// IndexerServiceClient is the client API for IndexerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IndexerServiceClient interface {
	ExpandedReadChanges(ctx context.Context, in *ExpandedReadChangesRequest, opts ...grpc.CallOption) (IndexerService_ExpandedReadChangesClient, error)
}

type indexerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIndexerServiceClient(cc grpc.ClientConnInterface) IndexerServiceClient {
	return &indexerServiceClient{cc}
}

func (c *indexerServiceClient) ExpandedReadChanges(ctx context.Context, in *ExpandedReadChangesRequest, opts ...grpc.CallOption) (IndexerService_ExpandedReadChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &IndexerService_ServiceDesc.Streams[0], IndexerService_ExpandedReadChanges_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &indexerServiceExpandedReadChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IndexerService_ExpandedReadChangesClient interface {
	Recv() (*ExpandedReadChangesResponse, error)
	grpc.ClientStream
}

type indexerServiceExpandedReadChangesClient struct {
	grpc.ClientStream
}

func (x *indexerServiceExpandedReadChangesClient) Recv() (*ExpandedReadChangesResponse, error) {
	m := new(ExpandedReadChangesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IndexerServiceServer is the server API for IndexerService service.
// All implementations must embed UnimplementedIndexerServiceServer
// for forward compatibility
type IndexerServiceServer interface {
	ExpandedReadChanges(*ExpandedReadChangesRequest, IndexerService_ExpandedReadChangesServer) error
	mustEmbedUnimplementedIndexerServiceServer()
}

// UnimplementedIndexerServiceServer must be embedded to have forward compatible implementations.
type UnimplementedIndexerServiceServer struct {
}

func (UnimplementedIndexerServiceServer) ExpandedReadChanges(*ExpandedReadChangesRequest, IndexerService_ExpandedReadChangesServer) error {
	return status.Errorf(codes.Unimplemented, "method ExpandedReadChanges not implemented")
}
func (UnimplementedIndexerServiceServer) mustEmbedUnimplementedIndexerServiceServer() {}

// UnsafeIndexerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IndexerServiceServer will
// result in compilation errors.
type UnsafeIndexerServiceServer interface {
	mustEmbedUnimplementedIndexerServiceServer()
}

func RegisterIndexerServiceServer(s grpc.ServiceRegistrar, srv IndexerServiceServer) {
	s.RegisterService(&IndexerService_ServiceDesc, srv)
}

func _IndexerService_ExpandedReadChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExpandedReadChangesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IndexerServiceServer).ExpandedReadChanges(m, &indexerServiceExpandedReadChangesServer{stream})
}

type IndexerService_ExpandedReadChangesServer interface {
	Send(*ExpandedReadChangesResponse) error
	grpc.ServerStream
}

type indexerServiceExpandedReadChangesServer struct {
	grpc.ServerStream
}

func (x *indexerServiceExpandedReadChangesServer) Send(m *ExpandedReadChangesResponse) error {
	return x.ServerStream.SendMsg(m)
}

// IndexerService_ServiceDesc is the grpc.ServiceDesc for IndexerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IndexerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "openfga.v1.IndexerService",
	HandlerType: (*IndexerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExpandedReadChanges",
			Handler:       _IndexerService_ExpandedReadChanges_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "openfga/v1/indexer_service.proto",
}
